// const request = require('supertest');
// const app = require('../app'); // Assuming your Express app is exported from app.js or similar

// describe('API Endpoints', () => {
//   // Test case for endpoint 1
//   it('should test endpoint 1', async () => {
//     // Make a request to the endpoint
//     const response = await request(app)
//       .get('/endpoint1')
//       .expect(200); // Expected HTTP status code

//     // Assert response body or other expectations
//     expect(response.body).toEqual({ /* expected response body */ });
//   });

//   // Test case for endpoint 2
//   it('should test endpoint 2', async () => {
//     // Make a request to the endpoint
//     const response = await request(app)
//       .post('/endpoint2')
//       .send({ /* request body */ })
//       .expect(201); // Expected HTTP status code

//     // Assert response body or other expectations
//     expect(response.body).toEqual({ /* expected response body */ });
//   });

//   // ... more test cases for other endpoints
// });

// let server;

//     beforeAll((done) => {
//         server = appi.listen(3000, () => done());
//     }, 10000);

//     afterAll((done) => {
//         closeServer(server).then(() => done());
//     });

//     test('should return "Hello world', done => {
//         request(appi)
//             .post('/hola')
//             .send({
//                 'mail': 'test@example.com',
//                 'password': 'testpassword'
//             })
//             .then(response => {
//                 expect(response.statusCode).toBe(200);
//                 expect(response.body).toEqual({msg: 'hola' });
//                 done();
//             })
//             .catch(error => done(error));
//     });
// });

// const closeServer = (server) => {
//   return new Promise(resolve => server.close(resolve));